// Generated by https://quicktype.io

export interface Result {
	lrUnitId: number;
	lrUnitNumber: string;
	mainBookId: number;
	mainBookName: string;
	cadastreMunicipalityId: number;
	institutionId: number;
	institutionName: InstitutionName;
	status: string;
	statusName: StatusName;
	verificated: boolean;
	condominiums: boolean;
	lrUnitTypeId: number;
	lrUnitTypeName: LrUnitTypeName;
	ownershipSheetB: OwnershipSheetB;
	possessionSheetA1: PossessionSheetA1;
}

export enum InstitutionName {
	ZemljišnoknjižniOdjelBiogradNaMoru = "Zemljišnoknjižni odjel Biograd Na Moru",
	ZemljišnoknjižniOdjelBlato = "Zemljišnoknjižni odjel Blato",
	ZemljišnoknjižniOdjelBujeBuie = "Zemljišnoknjižni odjel Buje - Buie",
	ZemljišnoknjižniOdjelCrikvenica = "Zemljišnoknjižni odjel Crikvenica",
	ZemljišnoknjižniOdjelDubrovnik = "Zemljišnoknjižni odjel Dubrovnik",
	ZemljišnoknjižniOdjelGospić = "Zemljišnoknjižni odjel Gospić",
	ZemljišnoknjižniOdjelKaštelLukšić = "Zemljišnoknjižni odjel Kaštel Lukšić",
	ZemljišnoknjižniOdjelKorčula = "Zemljišnoknjižni odjel Korčula",
	ZemljišnoknjižniOdjelKrk = "Zemljišnoknjižni odjel Krk",
	ZemljišnoknjižniOdjelLabin = "Zemljišnoknjižni odjel Labin",
	ZemljišnoknjižniOdjelMakarska = "Zemljišnoknjižni odjel Makarska",
	ZemljišnoknjižniOdjelMaliLošinj = "Zemljišnoknjižni odjel Mali Lošinj",
	ZemljišnoknjižniOdjelMetković = "Zemljišnoknjižni odjel Metković",
	ZemljišnoknjižniOdjelNoviVinodolski = "Zemljišnoknjižni odjel Novi Vinodolski",
	ZemljišnoknjižniOdjelObrovac = "Zemljišnoknjižni odjel Obrovac",
	ZemljišnoknjižniOdjelOmiš = "Zemljišnoknjižni odjel Omiš",
	ZemljišnoknjižniOdjelOpatija = "Zemljišnoknjižni odjel Opatija",
	ZemljišnoknjižniOdjelPag = "Zemljišnoknjižni odjel Pag",
	ZemljišnoknjižniOdjelPloče = "Zemljišnoknjižni odjel Ploče",
	ZemljišnoknjižniOdjelPorečParenzo = "Zemljišnoknjižni odjel Poreč - Parenzo",
	ZemljišnoknjižniOdjelPula = "Zemljišnoknjižni odjel Pula",
	ZemljišnoknjižniOdjelRab = "Zemljišnoknjižni odjel Rab",
	ZemljišnoknjižniOdjelRijeka = "Zemljišnoknjižni odjel Rijeka",
	ZemljišnoknjižniOdjelRovinjRovigno = "Zemljišnoknjižni odjel Rovinj - Rovigno",
	ZemljišnoknjižniOdjelSenj = "Zemljišnoknjižni odjel Senj",
	ZemljišnoknjižniOdjelSolin = "Zemljišnoknjižni odjel Solin",
	ZemljišnoknjižniOdjelSplit = "Zemljišnoknjižni odjel Split",
	ZemljišnoknjižniOdjelStariGrad = "Zemljišnoknjižni odjel Stari Grad",
	ZemljišnoknjižniOdjelSupetar = "Zemljišnoknjižni odjel Supetar",
	ZemljišnoknjižniOdjelTisno = "Zemljišnoknjižni odjel Tisno",
	ZemljišnoknjižniOdjelTrogir = "Zemljišnoknjižni odjel Trogir",
	ZemljišnoknjižniOdjelZadar = "Zemljišnoknjižni odjel Zadar",
	ZemljišnoknjižniOdjelŠibenik = "Zemljišnoknjižni odjel Šibenik",
}

export enum LrUnitTypeName {
	EtažnoVlasništvoSOdređenimOmjerima = "ETAŽNO VLASNIŠTVO S ODREĐENIM OMJERIMA",
	VišeZkTijela = "VIŠE ZK TIJELA",
	Vlasnički = "VLASNIČKI",
}

export interface OwnershipSheetB {
	lrUnitShares: LrUnitShare[];
	lrEntries?: LrEntryElement[];
	lrBodies?: OwnershipSheetBLrBody[];
}

export interface OwnershipSheetBLrBody {
	lrBodyId: number;
	lrBodyOrdinalNumber: number;
	title: string;
	lrEntries: LrEntryElement[];
}

export interface LrEntryElement {
	description: string;
	lrEntryId: number;
	orderNumber: string;
	lrOwners?: LrEntryLrOwner[];
}

export interface LrEntryLrOwner {
	lrOwnerId: number;
	name: string;
}

export interface LrUnitShare {
	description: string;
	lrOwners: LrUnitShareLrOwner[];
	lrUnitShareId: number;
	subSharesAndEntries: SubSharesAndEntry[];
	status: number;
	orderNumber: string;
	lrBodyId?: number;
	lrBodyTitle?: string;
}

export interface LrUnitShareLrOwner {
	name: string;
	lrOwnerId?: number;
	lrEntry?: LrOwnerLrEntry;
	address?: string;
	taxNumber?: string;
}

export interface LrOwnerLrEntry {
	description: string;
	orderNumber: string;
}

export interface SubSharesAndEntry {
	lrEntryId?: number;
	orderNumber: string;
	lrOwners?: SubSharesAndEntryLrOwner[];
	lrUnitShareId?: number;
	lrBodyId?: number;
	lrBodyTitle?: string;
	subSharesAndEntries?: any[];
	status?: number;
}

export interface SubSharesAndEntryLrOwner {
	name: string;
	lrEntry?: LrOwnerLrEntry;
}

export interface PossessionSheetA1 {
	cadParcels?: CADParcel[];
	lrParcels?: PossessionSheetA1LrParcel[];
	lrBodies?: PossessionSheetA1LrBody[];
}

export interface CADParcel {
	parcelId: number;
	parcelNumber: string;
	cadMunicipalityId: number;
	cadMunicipalityRegNum: string;
	cadMunicipalityName: string;
	institutionId: number;
	address: string;
	buildingRemark: number;
	detailSheetNumber?: string;
	hasBuildingRight: boolean;
	parcelParts: any[];
	possessionSheets: any[];
	isAdditionalDataSet: boolean;
	legalRegime: boolean;
	graphic: boolean;
	alphaNumeric: boolean;
	status: number;
	isHarmonized: boolean;
}

export interface PossessionSheetA1LrBody {
	lrBodyId: number;
	lrBodyOrdinalNumber: number;
	title: string;
	status: number;
	lrParcels: LrBodyLrParcel[];
}

export interface LrBodyLrParcel {
	parcelId: number;
	parcelNumber: string;
	address: string;
	area?: string;
	lrUnit: LrUnit;
	statusInLrUnit: number;
	parcelParts: PurpleParcelPart[];
}

export interface LrUnit {
	lrUnitId: number;
	lrUnitNumber: string;
	verificated: boolean;
	condominiums: boolean;
}

export interface PurpleParcelPart {
	name: string;
	area: string;
	building: boolean;
}

export interface PossessionSheetA1LrParcel {
	parcelId: number;
	parcelNumber: string;
	address: string;
	statusInLrUnit: number;
	parcelParts: FluffyParcelPart[];
	area?: string;
	lrUnit?: LrUnit;
}

export interface FluffyParcelPart {
	name: string;
	area?: string;
	building: boolean;
	areaInHvat?: string;
	areaInAcres?: string;
}

export enum StatusName {
	Aktivan = "Aktivan",
	UPrijepisu = "U prijepisu",
	Utrnut = "Utrnut",
}
